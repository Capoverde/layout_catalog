{"version":3,"sources":["styles/base/_globals.scss","styles/abstracts/_vars.scss","styles/abstracts/_mixins.scss","styles/components/_header.scss","styles/components/_stars.scss","styles/components/_cards.scss"],"names":[],"mappings":"AAAA,4FAAY,CAEZ,iBAGE,QAAS,CACT,SAAU,CACV,qBAAsB,CACtB,kBAAqB,CAGvB,UAEE,iBAAkB,CAClB,gBAAiB,CACjB,eAAgB,CAGlB,EACE,oBAAqB,CACrB,aAAc,CAGhB,MACE,YAAa,CAKf,WACE,YAAa,CACb,sBCfsB,CDgBtB,uBAAwB,CACxB,iBAAkB,CAClB,sBAAuB,CEbrB,0BFQJ,WAQI,qCAAyC,CAc5C,CEiBG,gDFvCJ,WAYI,qCAAyC,CAU5C,CEiBG,+CFvCJ,WAgBI,qCAAyC,CAM5C,CEPG,yBFfJ,WAoBI,qCAAyC,CAE5C,CGnDD,QACE,UAAW,CACX,cAAe,CAGf,6BAA8B,CAC9B,6BAAiC,CAKjC,mBARA,YAAa,CACb,kBAUqB,CAHrB,WACE,eAEmB,CAGrB,6BACE,WFLgB,CEMhB,gBFLc,CEMd,YAAa,CAXjB,iCAmBI,aF3BiC,CEQrC,uBAsBM,UAAW,CACX,iBAAkB,CAClB,UAAW,CACX,YAAc,CACd,QAAS,CACT,MAAO,CACP,mBAAqB,CACrB,wBFrC+B,CEyCnC,WACE,wBAAyB,CACzB,iBAAkB,CAClB,gBF9Bc,CE+Bd,eAAgB,CAChB,gBFlCgB,CEmChB,oBAAqB,CACrB,aF1C2B,CE2C3B,WAAY,CACZ,oBAAqB,CATtB,oCAYG,aFrD+B,CGDrC,OACE,YAAa,CAEb,aACE,YAAkB,CAClB,aAAmB,CACnB,gBAAiB,CACjB,2BAA4B,CAC5B,uBAA2B,CAC3B,0DAA2C,CAI3C,uIACE,0DAAkD,CAItD,8BACE,kBAAyB,CCnB7B,MACE,WJkBY,CIjBZ,4BAA4C,CAC5C,YAAa,CACb,qBAAsB,CACtB,qBJAwB,CICxB,wBJG0B,CIF1B,mBAAqB,CACrB,6BAAiC,CARnC,sBAWI,aJJ2B,CIK3B,gBJWmB,CIVnB,eAAgB,CAChB,kBAAmB,CACnB,gBAAkB,CAftB,YAmBI,oBAAqB,CAnBzB,4BAsBM,aJZ+B,CIgBnC,WACE,WJPS,CIQT,cJPW,CIQX,kBAA0B,CAG5B,WACE,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,iBAAkB,CAClB,WAAY,CACZ,WAAmB,CACnB,UJlCsB,CImCtB,wBJvCiC,CIwCjC,iBAAkB,CAClB,gBAAiB,CACjB,eAAgB,CAChB,gBAAiB,CACjB,wBAAyB,CACzB,wBJ7CiC,CI8CjC,mBJvBa,CIwBb,cAAe,CAhBhB,iBAmBG,aJlD+B,CImD/B,qBJ/CoB,CIsDxB,mBACE,oBAA0B,CAC1B,cAAe,CACf,eAAgB,CAChB,kBAAmB,CACnB,aJ1D4B,CI2D5B,iBAAkB,CAGpB,gBACE,oBAA0B,CAC1B,YAAa,CACb,6BAA8B,CAC9B,oBAAqB,CACrB,kBAAmB,CACnB,cAAe,CAjBnB,kBAqBI,aJvE2B,CIwE3B,eAAgB,CAGlB,oBACE,YAAa,CACb,6BAA8B,CAC9B,oBAA0B,CAC1B,kBAAmB,CAJpB,gCASK,gBAAiB,CACjB,eAAgB,CAChB,aJvFwB,CI4E7B,kCAeK,aJ1FuB,CI2FvB,gBAAiB,CACjB,eAAgB,CAChB,kBAAmB","file":"main.79a67b56.css","sourceRoot":"../src","sourcesContent":["@import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap\");\n\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  transition: all 300ms;\n}\n\nhtml,\nbody {\n  overflow-x: hidden;\n  min-height: 100vh;\n  font-size: 62.5%;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n\n.main {\n  display: flex;\n}\n\n// ---- PAGE GRID ---- //\n\n.container {\n  display: grid;\n  grid-gap: $grid-gap;\n  margin: 5rem auto 7.2rem;\n  width: fit-content;\n  justify-content: center;\n\n  @include respond-above(md) {\n    grid-template-columns: repeat(4, $card-w);\n  }\n\n  @include respond-between(sm, md) {\n    grid-template-columns: repeat(3, $card-w);\n  }\n\n  @include respond-between(xs, sm) {\n    grid-template-columns: repeat(2, $card-w);\n  }\n\n  @include respond-below(xs) {\n    grid-template-columns: repeat(1, $card-w);\n  }\n}\n","// ------ VARIABLES ------ //\n$blue-accent-clr: hsl(193, 100%, 43%);\n$active-link: $blue-accent-clr;\n\n//-- cards-palette:\n$main-clr:hsl(0, 0%, 100%);\n$secondary-clr:hsl(244, 8%, 41%);\n$main-accent:hsl(234, 80%, 12%);\n$card-bg-clr: $main-clr;\n$card-bd-clr:hsl(0, 0%, 95%);\n$card-hover-title: hsl(217, 46%, 37%);\n\n//-- sizes:\n$header-height: 6rem;\n$item-spacer: 2rem;\n$text-size: 1.2rem;\n$grid-gap: 4.6rem 4.8rem;\n\n//card-sizes:\n$card-w: 20rem;\n$img-w: 16rem;\n$img-h: 13.4rem;\n$spacer: 0.8rem;\n$card-title-fsz: 1.2rem;\n$btn-bdrs: 0.5rem;\n$star-size: 1rem;\n","//                   MEDIA QUERIES\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n// A map of breakpoints.\n$breakpoints: (\n  xs: 488px,\n  sm: 768px,\n  md: 1024px,\n  lg: 1200px\n);\n//  RESPOND ABOVE\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n// @include respond-above(sm) {}\n@mixin respond-above($breakpoint) {\n  // If the breakpoint exists in the map.\n  @if map-has-key($breakpoints, $breakpoint) {\n    // Get the breakpoint value.\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\n\n    // Write the media query.\n    @media (min-width: $breakpoint-value) {\n      @content;\n    }\n\n    // If the breakpoint doesn't exist in the map.\n  }\n  @else {\n\n    @warn \"Invalid breakpoint: #{$breakpoint}.\";\n  }\n}\n\n//                  RESPOND BELOW\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n// @include respond-below(sm) {}\n@mixin respond-below($breakpoint) {\n  // If the breakpoint exists in the map.\n  @if map-has-key($breakpoints, $breakpoint) {\n    // Get the breakpoint value.\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\n\n    // Write the media query.\n    @media (max-width: ($breakpoint-value - 1)) {\n      @content;\n    }\n\n    // If the breakpoint doesn't exist in the map.\n  }\n  @else {\n    // Log a warning.\n    @warn \"Invalid breakpoint: #{$breakpoint}.\";\n  }\n}\n\n//  RESPOND BETWEEN\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n// @include respond-between(sm, md) {}\n@mixin respond-between($lower, $upper) {\n  // If both the lower and upper breakpoints exist in the map.\n  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\n    // Get the lower and upper breakpoints.\n    $lower-breakpoint: map-get($breakpoints, $lower);\n    $upper-breakpoint: map-get($breakpoints, $upper);\n\n    // Write the media query.\n    @media (min-width: $lower-breakpoint)\n      and (max-width: ($upper-breakpoint - 1)) {\n      @content;\n    }\n\n    // If one or both of the breakpoints don't exist.\n  }\n  @else {\n    // If lower breakpoint is invalid.\n    @if (map-has-key($breakpoints, $lower) == false) {\n      // Log a warning.\n      @warn \"Your lower breakpoint was invalid: #{$lower}.\";\n    }\n\n    // If upper breakpoint is invalid.\n    @if (map-has-key($breakpoints, $upper) == false) {\n      // Log a warning.\n      @warn \"Your upper breakpoint was invalid: #{$upper}.\";\n    }\n  }\n}\n",".header {\n  width: 100%;\n  padding: 0 5rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-family: \"Roboto\", sans-serif;\n}\n\n.nav {\n\n  &__list {\n    list-style: none;\n    display: flex;\n    align-items: center;\n  }\n\n  &__item:not(:first-child) {\n    height: $header-height;\n    margin-left: $item-spacer;\n    display: flex;\n  }\n\n  &__item:hover {\n    color: $active-link;\n  }\n\n  .is-active {\n    color: $active-link;\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      width: 100%;\n      height: 0.4rem;\n      bottom: 0;\n      left: 0;\n      border-radius: 0.8rem;\n      background-color: $active-link;\n    }\n  }\n\n  &__link {\n    text-transform: uppercase;\n    position: relative;\n    font-size: $text-size;\n    font-weight: 500;\n    line-height: $header-height;\n    text-decoration: none;\n    color: $main-accent;\n    height: 100%;\n    display: inline-block;\n\n    &[data-qa=\"nav-hover\"]:hover {\n      color: $active-link;\n    }\n  }\n}\n",".stars {\n  display: flex;\n\n  &__star {\n    width: $spacer * 2;\n    height: $spacer * 2;\n    line-height: 140%;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(\"../images/star.svg\");\n  }\n\n  @for $i from 1 through 5 {\n    &--#{$i} > :nth-child(-n + #{$i}) {\n      background-image: url(\"../images/star-active.svg\");\n    }\n  }\n\n  &__star:not(:last-child) {\n    margin-right: $spacer / 2;\n  }\n}\n",".card {\n  width: $card-w;\n  padding: $spacer * 4 $spacer * 2 $spacer * 2;\n  display: flex;\n  flex-direction: column;\n  background-color: $card-bg-clr;\n  border: 1px solid $card-bd-clr;\n  border-radius: 0.5rem;\n  font-family: \"Roboto\", sans-serif;\n\n  .content__title {\n    color: $main-accent;\n    font-size: $card-title-fsz;\n    font-weight: 500;\n    line-height: 1.8rem;\n    margin: 0 0 0.4rem;\n  }\n\n  &:hover {\n    transform: scale(1.2);\n\n    .content__title {\n      color: $card-hover-title;\n    }\n  }\n\n  &__img {\n    width: $img-w;\n    height: $img-h;\n    margin: 0 auto $spacer * 5;\n  }\n\n  &__btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-style: normal;\n    width: 166px;\n    height: $spacer * 5;\n    color: $main-clr;\n    background-color: $blue-accent-clr;\n    text-align: center;\n    font-size: 1.4rem;\n    font-weight: 700;\n    line-height: 1rem;\n    text-transform: uppercase;\n    border: 1px solid $blue-accent-clr;\n    border-radius: $btn-bdrs;\n    cursor: pointer;\n\n    &:hover {\n      color: $blue-accent-clr;\n      background-color: $main-clr;\n    }\n  }\n}\n\n.content {\n\n  &__subtitle {\n    margin-bottom: $spacer * 2;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.4rem;\n    color: $secondary-clr;\n    font-style: normal;\n  }\n\n  &__stars {\n    margin-bottom: $spacer * 3;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    line-height: 1.4rem;\n    font-size: 1rem;\n  }\n\n  .reviews {\n    color: $main-accent;\n    font-weight: 400;\n  }\n\n  &__price-box {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: $spacer * 2;\n    align-items: center;\n\n    .price {\n\n      &-text {\n        font-size: 1.2rem;\n        font-weight: 400;\n        color: $secondary-clr;\n      }\n\n      &_amount {\n        color: $main-accent;\n        font-size: 1.6rem;\n        font-weight: 700;\n        line-height: 1.8rem;\n      }\n    }\n  }\n}\n"]}